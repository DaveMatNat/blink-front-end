{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/davidnathanson/Documents/Coding/Schedule%20maker/Blink/Frontend/app/page.tsx"],"sourcesContent":["\"use client\"; // ✅ Enables client-side rendering in Next.js\n\nimport { useState, useEffect, Fragment } from \"react\"; // ✅ Import React hooks\nimport axios from \"axios\"; // ✅ Import Axios for API requests\nimport Fuse from \"fuse.js\"; // ✅ Import Fuse.js for fuzzy searching\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"; // ✅ Import ShadCN UI components\nimport { Dialog, Transition } from \"@headlessui/react\"; // ✅ Import Headless UI for modal dialogs\nimport { motion } from \"framer-motion\"; // ✅ Import Framer Motion for animations\nimport FullCalendar from \"@fullcalendar/react\"; // ✅ Import FullCalendar.js for scheduling\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; // ✅ Import FullCalendar grid view\nimport timeGridPlugin from \"@fullcalendar/timegrid\"; // ✅ Import FullCalendar time grid view\n\n// ✅ Define TypeScript interface for a course object\ninterface Course {\n  courseReferenceNumber: string;\n  courseTitle: string;\n  courseMajor: string;\n  subjectCourse: string;\n  faculty?: { displayName: string }[]; // ✅ Array of faculty objects (names of professors)\n  meetingsFaculty?: {\n    meetingTime: {\n      beginTime: string;\n      endTime: string;\n      monday: boolean;\n      tuesday: boolean;\n      wednesday: boolean;\n      thursday: boolean;\n      friday: boolean;\n    };\n  }[];\n}\n\n// ✅ Function to generate a random hex color\nconst getRandomColor = () => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\n// ✅ Store assigned colors to keep consistency across renders\nconst courseColors: Record<string, string> = {};\n\nexport default function Home() {\n  // ✅ State to store course data, selected courses, search input, and theme\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [selectedCourses, setSelectedCourses] = useState<Course[]>([]);\n  const [search, setSearch] = useState(\"\");\n  const [theme, setTheme] = useState(\"light\");\n\n  // ✅ Fetch courses from backend API on component mount\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:5001/api/courses\") // ✅ Make GET request to backend\n      .then((res) => setCourses(res.data)) // ✅ Store fetched data in state\n      .catch((err) => console.error(err)); // ✅ Log errors if API request fails\n  }, []);\n\n  // ✅ Update dark/light theme based on user selection\n  useEffect(() => {\n    document.documentElement.classList.toggle(\"dark\", theme === \"dark\");\n  }, [theme]);\n\n  // ✅ Function to add/remove courses from selectedCourses list\n  const toggleCourse = (course: Course) => {\n    setSelectedCourses((prev) =>\n      prev.find((c) => c.courseReferenceNumber === course.courseReferenceNumber)\n        ? prev.filter((c) => c.courseReferenceNumber !== course.courseReferenceNumber) // ✅ Remove course if already selected\n        : [...prev, course] // ✅ Add course if not already selected\n    );\n  };\n\n  // ✅ 1️⃣ Create Fuse.js instance for fuzzy search\n  const fuse = new Fuse(courses, {\n    keys: [\n      \"courseTitle\",\n      \"courseMajor\",\n      \"subjectCourse\",\n      {\n        name: \"faculty\",\n        getFn: (course) =>\n          course.faculty?.map(f => {\n            const parts = f.displayName.split(\", \"); // ✅ Split \"Last, First\"\n            return parts.length === 2 ? `${parts[1]} ${parts[0]}` : f.displayName; // ✅ Swap to \"First Last\"\n          }) || [],\n      },\n    ],\n    threshold: 0.1, // ✅ Adjust for more or less fuzzy matching\n  });\n\n  // ✅ 2️⃣ Use Fuse.js to get search results\n  const filteredCourses = search.trim()\n    ? fuse.search(search).map(result => result.item) // ✅ Extract matched courses from Fuse results\n    : courses; // ✅ Show all courses if search is empty\n\n  // ✅ Convert selected courses into FullCalendar events with random colors\n  const events = selectedCourses.flatMap((course) => {\n    if (!courseColors[course.courseReferenceNumber]) {\n      courseColors[course.courseReferenceNumber] = getRandomColor(); // ✅ Assign a color once per course\n    }\n\n    return course.meetingsFaculty?.map((meeting) => {\n      if (!meeting.meetingTime) return null; // ✅ Skip if no meeting time exists\n\n      const { beginTime, endTime, monday, tuesday, wednesday, thursday, friday } = meeting.meetingTime;\n      const days = [monday, tuesday, wednesday, thursday, friday];\n\n      return days\n        .map((day, index) =>\n          day\n            ? {\n                title: course.courseTitle,\n                startTime: beginTime ? `${beginTime.substring(0, 2)}:${beginTime.substring(2)}` : \"00:00\",\n                endTime: endTime ? `${endTime.substring(0, 2)}:${endTime.substring(2)}` : \"00:00\",\n                daysOfWeek: [index + 1], // ✅ Convert boolean day flags to FullCalendar day indexes (1 = Monday)\n                backgroundColor: courseColors[course.courseReferenceNumber], // ✅ Assign random color\n                borderColor: courseColors[course.courseReferenceNumber], // ✅ Assign same border color\n              }\n            : null\n        )\n        .filter(Boolean); // ✅ Remove null values\n    });\n  }).flat();\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 p-6 transition-all flex\">\n      {/* ✅ Right Content (2/3 width) - Calendar */}\n      <div className=\"w-2/3 p-4\">\n        <div className=\"bg-white dark:bg-gray-800 shadow-lg rounded-lg p-4\">\n          <FullCalendar\n            plugins={[dayGridPlugin, timeGridPlugin]}\n            initialView=\"timeGridWeek\"\n            events={events}\n            allDaySlot={false}\n            slotMinTime=\"07:00:00\"\n            slotMaxTime=\"22:00:00\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}